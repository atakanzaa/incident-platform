# Common configuration for all environments
server:
  port: 8080

spring:
  application:
    name: gateway-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:development}
  cloud:
    config:
      enabled: false
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      routes:
        # Auth Service Route
        - id: auth-service
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/api/auth/**
        
        # Log Collector Route
        - id: log-collector-service
          uri: lb://LOG-COLLECTOR-SERVICE
          predicates:
            - Path=/api/logs/**
          filters:
            - AuthenticationFilter
        
        # Anomaly Detector Route
        - id: anomaly-detector-service
          uri: lb://ANOMALY-DETECTOR-SERVICE
          predicates:
            - Path=/api/anomaly/**
          filters:
            - AuthenticationFilter
        
        # Alert Manager Route
        - id: alert-manager-service
          uri: lb://ALERT-MANAGER-SERVICE
          predicates:
            - Path=/api/alerts/**
          filters:
            - AuthenticationFilter
        
        # Notification Service Route
        - id: notification-service
          uri: lb://NOTIFICATION-SERVICE
          predicates:
            - Path=/api/notifications/**
          filters:
            - AuthenticationFilter
        
        # Incident Tracker Route
        - id: incident-tracker-service
          uri: lb://INCIDENT-TRACKER-SERVICE
          predicates:
            - Path=/api/incidents/**
          filters:
            - AuthenticationFilter
        
        # Dashboard Service Route
        - id: dashboard-service
          uri: lb://DASHBOARD-SERVICE
          predicates:
            - Path=/api/dashboard/**
          filters:
            - AuthenticationFilter
        
        # WebSocket Route for Dashboard
        - id: dashboard-ws
          uri: lb:ws://DASHBOARD-SERVICE
          predicates:
            - Path=/ws/**
          filters:
            - AuthenticationFilter

# Common Eureka configuration
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true

# Common JWT configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey12345678901234567890}
  expiration: ${JWT_EXPIRATION:86400000}

# Common management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway
  endpoint:
    gateway:
      enabled: true

---
# Development environment
spring:
  config:
    activate:
      on-profile: development
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:3000"
              - "http://localhost:5173"
              - "http://localhost:8080"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders:
              - "*"
            allowCredentials: true
            maxAge: 3600

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

jwt:
  secret: mySecretKey12345678901234567890
  expiration: 86400000

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web.reactive.function.client: TRACE
    com.incident.gateway_service: DEBUG

---
# Staging environment
spring:
  config:
    activate:
      on-profile: staging
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "https://incident-platform-staging.your-domain.com"
              - "https://dashboard-staging.your-domain.com"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders:
              - "Content-Type"
              - "Authorization"
              - "X-Requested-With"
            allowCredentials: true
            maxAge: 3600
      # Rate limiting for staging
      filter:
        request-rate-limiter:
          enabled: true
          redis-rate-limiter:
            replenish-rate: 100
            burst-capacity: 200

eureka:
  client:
    service-url:
      defaultZone: http://discovery-server:8761/eureka/

jwt:
  secret: ${JWT_SECRET}
  expiration: 3600000

logging:
  level:
    org.springframework.cloud.gateway: INFO
    org.springframework.web.reactive.function.client: WARN
    com.incident.gateway_service: INFO
    root: INFO

---
# Production environment
spring:
  config:
    activate:
      on-profile: production
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "https://incident-platform.your-domain.com"
              - "https://dashboard.your-domain.com"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders:
              - "Content-Type"
              - "Authorization"
              - "X-Requested-With"
            allowCredentials: true
            maxAge: 1800
      # Enhanced rate limiting for production
      filter:
        request-rate-limiter:
          enabled: true
          redis-rate-limiter:
            replenish-rate: 50
            burst-capacity: 100
        retry:
          retries: 3
          statuses: BAD_GATEWAY,GATEWAY_TIMEOUT
          methods: GET,POST
          backoff:
            firstBackoff: 50ms
            maxBackoff: 500ms
        circuit-breaker:
          enabled: true
          failure-threshold: 50
          slow-call-duration-threshold: 5000
          slow-call-rate-threshold: 50
          sliding-window-size: 100

eureka:
  client:
    service-url:
      defaultZone: http://discovery-server:8761/eureka/
    registry-fetch-interval-seconds: 10
    heartbeat-executor-thread-pool-size: 2

jwt:
  secret: ${JWT_SECRET}
  expiration: 1800000

management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway,metrics,prometheus

# Production security and monitoring
security:
  rate-limit:
    enabled: true
    requests-per-minute: 1000
    burst-capacity: 1500

monitoring:
  tracing:
    enabled: true
    sampling-rate: 0.1
  metrics:
    enabled: true

logging:
  level:
    org.springframework.cloud.gateway: WARN
    org.springframework.web.reactive.function.client: ERROR
    com.incident.gateway_service: WARN
    root: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/gateway-service/application.log 